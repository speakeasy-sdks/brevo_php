<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace test\BREVO\Models\Operations;


class PostConversationsAgentOnlinePingRequestBody
{
    /**
     * agent email. When sending online pings from a standalone system, it’s hard to maintain a 1-to-1 relationship between the users of both systems. In this case, an agent can be specified by their email address. If there’s no agent with the specified email address in your Brevo organization, a dummy agent will be created automatically.
     * 
     * @var mixed $agentEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('agentEmail')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $agentEmail = null;
    
    /**
     * agent ID. It can be found on agent’s page or received <a href="https://developers.brevo.com/docs/conversations-webhooks">from a webhook</a>. Alternatively, you can use `agentEmail` + `agentName` + `receivedFrom` instead (all 3 fields required).
     * 
     * @var mixed $agentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('agentId')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $agentId = null;
    
    /**
     * agent name
     * 
     * @var mixed $agentName
     */
	#[\JMS\Serializer\Annotation\SerializedName('agentName')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $agentName = null;
    
    /**
     * mark your messages to distinguish messages created by you from the others.
     * 
     * @var mixed $receivedFrom
     */
	#[\JMS\Serializer\Annotation\SerializedName('receivedFrom')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $receivedFrom = null;
    
	public function __construct()
	{
		$this->agentEmail = null;
		$this->agentId = null;
		$this->agentName = null;
		$this->receivedFrom = null;
	}
}
