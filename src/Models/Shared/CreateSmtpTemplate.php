<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace test\BREVO\Models\Shared;


/**
 * CreateSmtpTemplate - values to update in transactional email template
 * 
 * @package test\BREVO\Models\Shared
 * @access public
 */
class CreateSmtpTemplate
{
    /**
     * Absolute url of the attachment (**no local file**). Extension allowed:
     * 
     * #### xlsx, xls, ods, docx, docm, doc, csv, pdf, txt, gif, jpg, jpeg, png, tif, tiff, rtf, bmp, cgm, css, shtml, html, htm, zip, xml, ppt, pptx, tar, ez, ics, mobi, msg, pub and eps'
     * 
     * 
     * @var ?string $attachmentUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('attachmentUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $attachmentUrl = null;
    
    /**
     * Body of the message (HTML version). The field must have more than 10 characters. **REQUIRED if htmlUrl is empty**
     * 
     * 
     * 
     * @var ?string $htmlContent
     */
	#[\JMS\Serializer\Annotation\SerializedName('htmlContent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $htmlContent = null;
    
    /**
     * Url which contents the body of the email message. REQUIRED if htmlContent is empty
     * 
     * @var ?string $htmlUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('htmlUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $htmlUrl = null;
    
    /**
     * Status of template. isActive = true means template is active and isActive = false means template is inactive
     * 
     * @var ?bool $isActive
     */
	#[\JMS\Serializer\Annotation\SerializedName('isActive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isActive = null;
    
    /**
     * Email on which campaign recipients will be able to reply to
     * 
     * @var ?string $replyTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('replyTo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $replyTo = null;
    
    /**
     * Sender details including id or email and name (_optional_). Only one of either Sender's email or Sender's ID shall be passed in one request at a time. For example:
     * 
     * **{"name":"xyz", "email":"example@abc.com"}**
     * **{"name":"xyz", "id":123}**
     * 
     * 
     * @var \test\BREVO\Models\Shared\CreateSmtpTemplateSender $sender
     */
	#[\JMS\Serializer\Annotation\SerializedName('sender')]
    #[\JMS\Serializer\Annotation\Type('test\BREVO\Models\Shared\CreateSmtpTemplateSender')]
    public CreateSmtpTemplateSender $sender;
    
    /**
     * Subject of the template
     * 
     * @var string $subject
     */
	#[\JMS\Serializer\Annotation\SerializedName('subject')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $subject;
    
    /**
     * Tag of the template
     * 
     * @var ?string $tag
     */
	#[\JMS\Serializer\Annotation\SerializedName('tag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tag = null;
    
    /**
     * Name of the template
     * 
     * @var string $templateName
     */
	#[\JMS\Serializer\Annotation\SerializedName('templateName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $templateName;
    
    /**
     * To personalize the **To** Field. If you want to include the first name and last name of your recipient, add **{FNAME} {LNAME}**. These contact attributes must already exist in your Brevo account. If input parameter **params** used please use **{{contact.FNAME}} {{contact.LNAME}}** for personalization
     * 
     * 
     * 
     * @var ?string $toField
     */
	#[\JMS\Serializer\Annotation\SerializedName('toField')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $toField = null;
    
	public function __construct()
	{
		$this->attachmentUrl = null;
		$this->htmlContent = null;
		$this->htmlUrl = null;
		$this->isActive = null;
		$this->replyTo = null;
		$this->sender = new \test\BREVO\Models\Shared\CreateSmtpTemplateSender();
		$this->subject = "";
		$this->tag = null;
		$this->templateName = "";
		$this->toField = null;
	}
}
