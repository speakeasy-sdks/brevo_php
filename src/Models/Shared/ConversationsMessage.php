<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace test\BREVO\Models\Shared;


/**
 * ConversationsMessage - a Conversations message
 * 
 * @package test\BREVO\Models\Shared
 * @access public
 */
class ConversationsMessage
{
    /**
     * ID of the agent on whose behalf the message was sent (only in messages sent by an agent).
     * 
     * @var ?string $agentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('agentId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $agentId = null;
    
    /**
     * Agent’s name as displayed to the visitor. Only in the messages sent by an agent.
     * 
     * @var ?string $agentName
     */
	#[\JMS\Serializer\Annotation\SerializedName('agentName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $agentName = null;
    
    /**
     * Timestamp in milliseconds.
     * 
     * @var ?int $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $createdAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('file')]
    #[\JMS\Serializer\Annotation\Type('test\BREVO\Models\Shared\File')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?File $file = null;
    
    /**
     * Message ID. It can be used for further manipulations with the message.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * `true` for pushed messages
     * 
     * @var ?bool $isPushed
     */
	#[\JMS\Serializer\Annotation\SerializedName('isPushed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPushed = null;
    
    /**
     * In two-way integrations, messages sent via REST API can be marked with receivedFrom property and then filtered out when received in a webhook to avoid infinite loop.
     * 
     * @var ?string $receivedFrom
     */
	#[\JMS\Serializer\Annotation\SerializedName('receivedFrom')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $receivedFrom = null;
    
    /**
     * Message text or name of the attached file
     * 
     * @var ?string $text
     */
	#[\JMS\Serializer\Annotation\SerializedName('text')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $text = null;
    
    /**
     * `"agent"` for agents’ messages, `"visitor"` for visitors’ messages.
     * 
     * @var ?\test\BREVO\Models\Shared\Type $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<test\BREVO\Models\Shared\Type>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Type $type = null;
    
    /**
     * visitor’s ID
     * 
     * @var ?string $visitorId
     */
	#[\JMS\Serializer\Annotation\SerializedName('visitorId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $visitorId = null;
    
	public function __construct()
	{
		$this->agentId = null;
		$this->agentName = null;
		$this->createdAt = null;
		$this->file = null;
		$this->id = null;
		$this->isPushed = null;
		$this->receivedFrom = null;
		$this->text = null;
		$this->type = null;
		$this->visitorId = null;
	}
}
