<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace test\BREVO\Models\Shared;


/**
 * UpdateExternalFeed - Values to update a feed
 * 
 * @package test\BREVO\Models\Shared
 * @access public
 */
class UpdateExternalFeed
{
    /**
     * Auth type of the feed:
     * 
     *  * `basic`
     *  * `token`
     *  * `noAuth`
     * 
     * 
     * @var ?\test\BREVO\Models\Shared\UpdateExternalFeedAuthType $authType
     */
	#[\JMS\Serializer\Annotation\SerializedName('authType')]
    #[\JMS\Serializer\Annotation\Type('enum<test\BREVO\Models\Shared\UpdateExternalFeedAuthType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateExternalFeedAuthType $authType = null;
    
    /**
     * Toggle caching of feed url response
     * 
     * @var ?bool $cache
     */
	#[\JMS\Serializer\Annotation\SerializedName('cache')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cache = null;
    
    /**
     * Custom headers for the feed
     * 
     * @var ?array<\test\BREVO\Models\Shared\UpdateExternalFeedHeaders> $headers
     */
	#[\JMS\Serializer\Annotation\SerializedName('headers')]
    #[\JMS\Serializer\Annotation\Type('array<test\BREVO\Models\Shared\UpdateExternalFeedHeaders>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $headers = null;
    
    /**
     * Maximum number of retries on the feed url
     * 
     * @var ?int $maxRetries
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxRetries')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxRetries = null;
    
    /**
     * Name of the feed
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Password for authType `basic`
     * 
     * @var ?string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $password = null;
    
    /**
     * Token for authType `token`
     * 
     * @var ?string $token
     */
	#[\JMS\Serializer\Annotation\SerializedName('token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $token = null;
    
    /**
     * URL of the feed
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * Username for authType `basic`
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->authType = null;
		$this->cache = null;
		$this->headers = null;
		$this->maxRetries = null;
		$this->name = null;
		$this->password = null;
		$this->token = null;
		$this->url = null;
		$this->username = null;
	}
}
