<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace test\BREVO\Models\Shared;


class GetAggregatedReport
{
    /**
     * Number of blocked contact emails for the timeframe
     * 
     * @var ?int $blocked
     */
	#[\JMS\Serializer\Annotation\SerializedName('blocked')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $blocked = null;
    
    /**
     * Number of clicks for the timeframe
     * 
     * @var ?int $clicks
     */
	#[\JMS\Serializer\Annotation\SerializedName('clicks')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $clicks = null;
    
    /**
     * Number of delivered emails for the timeframe
     * 
     * @var ?int $delivered
     */
	#[\JMS\Serializer\Annotation\SerializedName('delivered')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $delivered = null;
    
    /**
     * Number of hardbounces for the timeframe
     * 
     * @var ?int $hardBounces
     */
	#[\JMS\Serializer\Annotation\SerializedName('hardBounces')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $hardBounces = null;
    
    /**
     * Number of invalid emails for the timeframe
     * 
     * @var ?int $invalid
     */
	#[\JMS\Serializer\Annotation\SerializedName('invalid')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $invalid = null;
    
    /**
     * Number of openings for the timeframe
     * 
     * @var ?int $opens
     */
	#[\JMS\Serializer\Annotation\SerializedName('opens')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $opens = null;
    
    /**
     * Time frame of the report
     * 
     * @var ?string $range
     */
	#[\JMS\Serializer\Annotation\SerializedName('range')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $range = null;
    
    /**
     * Number of requests for the timeframe
     * 
     * @var ?int $requests
     */
	#[\JMS\Serializer\Annotation\SerializedName('requests')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $requests = null;
    
    /**
     * Number of softbounces for the timeframe
     * 
     * @var ?int $softBounces
     */
	#[\JMS\Serializer\Annotation\SerializedName('softBounces')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $softBounces = null;
    
    /**
     * Number of complaint (spam report) for the timeframe
     * 
     * @var ?int $spamReports
     */
	#[\JMS\Serializer\Annotation\SerializedName('spamReports')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $spamReports = null;
    
    /**
     * Number of unique clicks for the timeframe
     * 
     * @var ?int $uniqueClicks
     */
	#[\JMS\Serializer\Annotation\SerializedName('uniqueClicks')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $uniqueClicks = null;
    
    /**
     * Number of unique openings for the timeframe
     * 
     * @var ?int $uniqueOpens
     */
	#[\JMS\Serializer\Annotation\SerializedName('uniqueOpens')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $uniqueOpens = null;
    
    /**
     * Number of unsubscribed emails for the timeframe
     * 
     * @var ?int $unsubscribed
     */
	#[\JMS\Serializer\Annotation\SerializedName('unsubscribed')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $unsubscribed = null;
    
	public function __construct()
	{
		$this->blocked = null;
		$this->clicks = null;
		$this->delivered = null;
		$this->hardBounces = null;
		$this->invalid = null;
		$this->opens = null;
		$this->range = null;
		$this->requests = null;
		$this->softBounces = null;
		$this->spamReports = null;
		$this->uniqueClicks = null;
		$this->uniqueOpens = null;
		$this->unsubscribed = null;
	}
}
