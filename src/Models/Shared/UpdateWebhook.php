<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace test\BREVO\Models\Shared;


/**
 * UpdateWebhook - Values to update a webhook
 * 
 * @package test\BREVO\Models\Shared
 * @access public
 */
class UpdateWebhook
{
    /**
     * Description of the webhook
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Inbound domain of webhook, used in case of event type `inbound`
     * 
     * @var ?string $domain
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $domain = null;
    
    /**
     * - Events triggering the webhook. Possible values for **Transactional** type webhook:
     * 
     * #### `sent` OR `request`, `delivered`, `hardBounce`, `softBounce`, `blocked`, `spam`, `invalid`, `deferred`, `click`, `opened`, `uniqueOpened` and `unsubscribed`
     * - Possible values for **Marketing** type webhook:
     * #### `spam`, `opened`, `click`, `hardBounce`, `softBounce`, `unsubscribed`, `listAddition` & `delivered`
     * - Possible values for **Inbound** type webhook:
     * #### `inboundEmailProcessed`
     * 
     * 
     * @var ?array<\test\BREVO\Models\Shared\UpdateWebhookEvents> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<enum<test\BREVO\Models\Shared\UpdateWebhookEvents>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $events = null;
    
    /**
     * URL of the webhook
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->domain = null;
		$this->events = null;
		$this->url = null;
	}
}
