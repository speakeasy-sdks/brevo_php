<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace test\BREVO\Models\Shared;


class CreateEmailCampaign
{
    /**
     * Status of A/B Test. abTesting = false means it is disabled & abTesting = true means it is enabled. **subjectA, subjectB, splitRule, winnerCriteria & winnerDelay** will be considered when abTesting is set to true.
     * 
     * subjectA & subjectB are mandatory together & subject if passed is ignored. **Can be set to true only if sendAtBestTime is false**.
     * You will be able to set up two subject lines for your campaign and send them to a random sample of your total recipients. Half of the test group will receive version A, and the other half will receive version B
     * 
     * 
     * @var ?bool $abTesting
     */
	#[\JMS\Serializer\Annotation\SerializedName('abTesting')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $abTesting = null;
    
    /**
     * Absolute url of the attachment (no local file).
     * 
     * Extension allowed:
     * #### xlsx, xls, ods, docx, docm, doc, csv, pdf, txt, gif, jpg, jpeg, png, tif, tiff, rtf, bmp, cgm, css, shtml, html, htm, zip, xml, ppt, pptx, tar, ez, ics, mobi, msg, pub and eps
     * 
     * 
     * @var ?string $attachmentUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('attachmentUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $attachmentUrl = null;
    
    /**
     * Footer of the email campaign
     * 
     * @var ?string $footer
     */
	#[\JMS\Serializer\Annotation\SerializedName('footer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $footer = null;
    
    /**
     * Header of the email campaign
     * 
     * @var ?string $header
     */
	#[\JMS\Serializer\Annotation\SerializedName('header')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $header = null;
    
    /**
     * Mandatory if htmlUrl and templateId are empty. Body of the message (HTML).
     * 
     * 
     * 
     * @var ?string $htmlContent
     */
	#[\JMS\Serializer\Annotation\SerializedName('htmlContent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $htmlContent = null;
    
    /**
     * **Mandatory if htmlContent and templateId are empty**. Url to the message (HTML). For example:
     * 
     * **https://html.domain.com**
     * 
     * 
     * @var ?string $htmlUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('htmlUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $htmlUrl = null;
    
    /**
     * **Mandatory if ipWarmupEnable is set to true**. Set a percentage increase rate for warming up your ip. We recommend you set the increase rate to 30% per day. If you want to send the same number of emails every day, set the daily increase value to 0%.
     * 
     * 
     * 
     * @var ?int $increaseRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('increaseRate')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $increaseRate = null;
    
    /**
     * **Mandatory if ipWarmupEnable is set to true**. Set an initial quota greater than 1 for warming up your ip. We recommend you set a value of 3000.
     * 
     * 
     * 
     * @var ?int $initialQuota
     */
	#[\JMS\Serializer\Annotation\SerializedName('initialQuota')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $initialQuota = null;
    
    /**
     * Use true to embedded the images in your email. Final size of
     * 
     * the email should be less than **4MB**. Campaigns with embedded images can
     * _not be sent to more than 5000 contacts_
     * 
     * 
     * @var ?bool $inlineImageActivation
     */
	#[\JMS\Serializer\Annotation\SerializedName('inlineImageActivation')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $inlineImageActivation = null;
    
    /**
     * **Available for dedicated ip clients**. Set this to true if you wish to warm up your ip.
     * 
     * 
     * 
     * @var ?bool $ipWarmupEnable
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipWarmupEnable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ipWarmupEnable = null;
    
    /**
     * Use true to enable the mirror link
     * 
     * @var ?bool $mirrorActive
     */
	#[\JMS\Serializer\Annotation\SerializedName('mirrorActive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $mirrorActive = null;
    
    /**
     * Name of the campaign
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Pass the set of attributes to customize the type classic campaign. For example: **{"FNAME":"Joe", "LNAME":"Doe"}**. Only available if **type** is **classic**. It's considered only if campaign is in _New Template Language format_. The New Template Language is dependent on the values of **subject, htmlContent/htmlUrl, sender.name & toField**
     * 
     * 
     * 
     * @var ?array<string, mixed> $params
     */
	#[\JMS\Serializer\Annotation\SerializedName('params')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $params = null;
    
    /**
     * Preview text or preheader of the email campaign
     * 
     * @var ?string $previewText
     */
	#[\JMS\Serializer\Annotation\SerializedName('previewText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $previewText = null;
    
    /**
     * Segment ids and List ids to include/exclude from campaign
     * 
     * @var ?\test\BREVO\Models\Shared\CreateEmailCampaignRecipients $recipients
     */
	#[\JMS\Serializer\Annotation\SerializedName('recipients')]
    #[\JMS\Serializer\Annotation\Type('test\BREVO\Models\Shared\CreateEmailCampaignRecipients')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateEmailCampaignRecipients $recipients = null;
    
    /**
     * Email on which the campaign recipients will be able to reply to
     * 
     * @var ?string $replyTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('replyTo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $replyTo = null;
    
    /**
     * Sending UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result**.
     * 
     * If sendAtBestTime is set to true, your campaign will be sent according to the date passed (ignoring the time part). For example:
     * **2017-06-01T12:30:00+02:00**
     * 
     * 
     * @var ?string $scheduledAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('scheduledAt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scheduledAt = null;
    
    /**
     * Set this to true if you want to send your campaign at best time.
     * 
     * @var ?bool $sendAtBestTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('sendAtBestTime')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $sendAtBestTime = null;
    
    /**
     * Sender details including id or email and name (_optional_). Only one of either Sender's email or Sender's ID shall be passed in one request at a time. For example:
     * 
     * **{"name":"xyz", "email":"example@abc.com"}**
     * **{"name":"xyz", "id":123}**
     * 
     * 
     * @var \test\BREVO\Models\Shared\CreateEmailCampaignSender $sender
     */
	#[\JMS\Serializer\Annotation\SerializedName('sender')]
    #[\JMS\Serializer\Annotation\Type('test\BREVO\Models\Shared\CreateEmailCampaignSender')]
    public CreateEmailCampaignSender $sender;
    
    /**
     * Add the size of your test groups. **Mandatory if abTesting = true & 'recipients' is passed**. We'll send version A and B to a random sample of recipients, and then the winning version to everyone else
     * 
     * 
     * 
     * @var ?int $splitRule
     */
	#[\JMS\Serializer\Annotation\SerializedName('splitRule')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $splitRule = null;
    
    /**
     * Subject of the campaign. **Mandatory if abTesting is false**.
     * 
     * Ignored if abTesting is true.
     * 
     * 
     * @var ?string $subject
     */
	#[\JMS\Serializer\Annotation\SerializedName('subject')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subject = null;
    
    /**
     * Subject A of the campaign. **Mandatory if abTesting = true**.
     * 
     * subjectA & subjectB should have unique value
     * 
     * 
     * @var ?string $subjectA
     */
	#[\JMS\Serializer\Annotation\SerializedName('subjectA')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subjectA = null;
    
    /**
     * Subject B of the campaign. **Mandatory if abTesting = true**.
     * 
     * subjectA & subjectB should have unique value
     * 
     * 
     * @var ?string $subjectB
     */
	#[\JMS\Serializer\Annotation\SerializedName('subjectB')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subjectB = null;
    
    /**
     * Tag of the campaign
     * 
     * @var ?string $tag
     */
	#[\JMS\Serializer\Annotation\SerializedName('tag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tag = null;
    
    /**
     * **Mandatory if htmlContent and htmlUrl are empty**. Id of the transactional
     * 
     * email template with status _active_. Used to copy only its content fetched
     * from htmlContent/htmlUrl to an email campaign for RSS feature.
     * 
     * 
     * @var ?int $templateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('templateId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $templateId = null;
    
    /**
     * To personalize the **To** Field. If you want to include the first name and last name of your recipient, add **{FNAME} {LNAME}**. These contact attributes must already exist in your Brevo account. If input parameter **params** used please use **{{contact.FNAME}} {{contact.LNAME}}** for personalization
     * 
     * 
     * 
     * @var ?string $toField
     */
	#[\JMS\Serializer\Annotation\SerializedName('toField')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $toField = null;
    
    /**
     * Enter an unsubscription page id. The page id is a 24 digit alphanumeric id that can be found in the URL when editing the page. If not entered, then the default unsubscription page will be used.
     * 
     * 
     * 
     * @var ?string $unsubscriptionPageId
     */
	#[\JMS\Serializer\Annotation\SerializedName('unsubscriptionPageId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unsubscriptionPageId = null;
    
    /**
     * **Mandatory if templateId is used containing the {{ update_profile }} tag**. Enter an update profile form id. The form id is a 24 digit alphanumeric id that can be found in the URL when editing the form. If not entered, then the default update profile form will be used.
     * 
     * 
     * 
     * @var ?string $updateFormId
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateFormId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updateFormId = null;
    
    /**
     * Customize the utm_campaign value. If this field is empty, the campaign name will be used. Only alphanumeric characters and spaces are allowed
     * 
     * @var ?string $utmCampaign
     */
	#[\JMS\Serializer\Annotation\SerializedName('utmCampaign')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $utmCampaign = null;
    
    /**
     * Choose the metrics that will determinate the winning version. **Mandatory if _splitRule_ >= 1 and < 50**. If splitRule = 50, `winnerCriteria` is ignored if passed
     * 
     * 
     * 
     * @var ?\test\BREVO\Models\Shared\CreateEmailCampaignWinnerCriteria $winnerCriteria
     */
	#[\JMS\Serializer\Annotation\SerializedName('winnerCriteria')]
    #[\JMS\Serializer\Annotation\Type('enum<test\BREVO\Models\Shared\CreateEmailCampaignWinnerCriteria>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateEmailCampaignWinnerCriteria $winnerCriteria = null;
    
    /**
     * Choose the duration of the test in hours. Maximum is 7 days, pass 24*7 = 168 hours. The winning version will be sent at the end of the test. **Mandatory if _splitRule_ >= 1 and < 50**. If splitRule = 50, `winnerDelay` is ignored if passed
     * 
     * 
     * 
     * @var ?int $winnerDelay
     */
	#[\JMS\Serializer\Annotation\SerializedName('winnerDelay')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $winnerDelay = null;
    
	public function __construct()
	{
		$this->abTesting = null;
		$this->attachmentUrl = null;
		$this->footer = null;
		$this->header = null;
		$this->htmlContent = null;
		$this->htmlUrl = null;
		$this->increaseRate = null;
		$this->initialQuota = null;
		$this->inlineImageActivation = null;
		$this->ipWarmupEnable = null;
		$this->mirrorActive = null;
		$this->name = "";
		$this->params = null;
		$this->previewText = null;
		$this->recipients = null;
		$this->replyTo = null;
		$this->scheduledAt = null;
		$this->sendAtBestTime = null;
		$this->sender = new \test\BREVO\Models\Shared\CreateEmailCampaignSender();
		$this->splitRule = null;
		$this->subject = null;
		$this->subjectA = null;
		$this->subjectB = null;
		$this->tag = null;
		$this->templateId = null;
		$this->toField = null;
		$this->unsubscriptionPageId = null;
		$this->updateFormId = null;
		$this->utmCampaign = null;
		$this->winnerCriteria = null;
		$this->winnerDelay = null;
	}
}
